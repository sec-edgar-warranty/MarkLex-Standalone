name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            name: Windows
            artifact: MarkLex-Windows
            ext: .zip
          - os: ubuntu-latest  
            name: Linux
            artifact: MarkLex-Linux
            ext: .tar.gz
          - os: macos-latest
            name: macOS
            artifact: MarkLex-macOS
            ext: .zip
            
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build with PyInstaller
      run: |
        pyinstaller --clean --onedir --windowed \
          --name=MarkLex-${{ matrix.name }} \
          --add-data "src${{ runner.os == 'Windows' && ';' || ':' }}src" \
          --hidden-import=src.main_window \
          --hidden-import=src.widgets.welcome_widget \
          --hidden-import=src.widgets.setup_widget \
          --hidden-import=src.widgets.lexicon_widget \
          --hidden-import=src.widgets.analysis_widget \
          --hidden-import=src.models.embedding_manager \
          --hidden-import=src.models.text_processor \
          --hidden-import=src.models.lexicon_manager \
          --hidden-import=src.utils.app_dirs \
          --hidden-import=src.styles.modern_style \
          --hidden-import=pandas._libs.tslibs.timedeltas \
          --hidden-import=pandas._libs.tslibs.np_datetime \
          --hidden-import=pandas._libs.tslibs.nattype \
          --hidden-import=pandas._libs.skiplist \
          --hidden-import=numpy.core._methods \
          --hidden-import=numpy.lib.format \
          --hidden-import=sklearn.utils._cython_blas \
          --hidden-import=sklearn.neighbors._typedefs \
          --hidden-import=gensim.models.word2vec \
          --hidden-import=gensim.models.keyedvectors \
          ${{ matrix.os == 'windows-latest' && '--icon=assets/MarkLex-icon.png' || '' }} \
          ${{ matrix.os == 'macos-latest' && '--icon=assets/MarkLex-icon.icns' || '' }} \
          main.py
          
    - name: Create Archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        Compress-Archive -Path dist\MarkLex-${{ matrix.name }} -DestinationPath MarkLex-${{ matrix.name }}-${{ github.event.inputs.version }}.zip
        
    - name: Create Archive (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd dist
        tar -czf ../MarkLex-${{ matrix.name }}-${{ github.event.inputs.version }}.tar.gz MarkLex-${{ matrix.name }}
        
    - name: Create Archive (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        cd dist
        zip -r ../MarkLex-${{ matrix.name }}-${{ github.event.inputs.version }}.zip MarkLex-${{ matrix.name }}
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: MarkLex-${{ matrix.name }}-${{ github.event.inputs.version }}${{ matrix.ext }}
        
  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      
    - name: List artifacts
      run: ls -R
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: MarkLex Desktop ${{ github.event.inputs.version }}
        body: |
          # MarkLex Desktop ${{ github.event.inputs.version }}
          
          ## Downloads
          - **Windows**: MarkLex-Windows-${{ github.event.inputs.version }}.zip
          - **Linux**: MarkLex-Linux-${{ github.event.inputs.version }}.tar.gz
          - **macOS**: MarkLex-macOS-${{ github.event.inputs.version }}.zip
          
          ## Installation
          1. Download the archive for your platform
          2. Extract the archive
          3. Run the MarkLex executable
          
          ## Requirements
          - No Python installation required
          - All dependencies included
          
          ---
          ðŸ¤– Built with GitHub Actions
        files: |
          MarkLex-Windows/MarkLex-Windows-${{ github.event.inputs.version }}.zip
          MarkLex-Linux/MarkLex-Linux-${{ github.event.inputs.version }}.tar.gz
          MarkLex-macOS/MarkLex-macOS-${{ github.event.inputs.version }}.zip