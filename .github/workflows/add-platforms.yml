name: Add Platform Builds

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to add builds to (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write
  actions: read

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libegl1-mesa libegl1 libgl1-mesa-glx libgl1 xvfb
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build Linux executable
      env:
        CI: true
        GITHUB_ACTIONS: true
      run: |
        echo "Building Linux version..."
        python -c "import qt_setup; print('✅ Qt platform configured for Linux build')"
        pyinstaller --noconfirm --onefile --add-data "src:src" --add-data "qt_setup.py:." --name "MarkLex" main.py
        cd dist && tar -czf MarkLex-Linux-x86_64.tar.gz MarkLex
        
    - name: Upload to existing release
      run: |
        gh release upload ${{ github.event.inputs.release_tag }} "dist/MarkLex-Linux-x86_64.tar.gz" --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    runs-on: windows-2022
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build Windows executable
      run: |
        echo "Building Windows version..."
        python -c "import qt_setup; print('✅ Qt platform configured for Windows build')"
        pyinstaller --noconfirm --onefile --windowed --add-data "src;src" --add-data "qt_setup.py;." --name "MarkLex" main.py
        cd dist && powershell Compress-Archive -Path MarkLex.exe -DestinationPath MarkLex-Windows-x86_64.zip
        
    - name: Upload to existing release
      run: |
        gh release upload ${{ github.event.inputs.release_tag }} "dist/MarkLex-Windows-x86_64.zip" --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos-intel:
    runs-on: macos-13  # Intel runner
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build macOS Intel app
      run: |
        echo "Building macOS Intel version..."
        pyinstaller MarkLex.spec
        cd dist && zip -r MarkLex-macOS-x86_64.zip MarkLex.app/
        
    - name: Upload to existing release
      run: |
        gh release upload ${{ github.event.inputs.release_tag }} "dist/MarkLex-macOS-x86_64.zip" --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}