name: Final EGL Fix Test

on:
  workflow_dispatch:
  
jobs:
  test-complete-fix:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
        
    - name: Install ALL possible EGL/OpenGL libraries
      run: |
        sudo apt-get update
        # Install EVERY possible EGL/OpenGL/Mesa library
        sudo apt-get install -y \
          mesa-utils \
          libegl1-mesa-dev \
          libgl1-mesa-dev \
          libgles2-mesa-dev \
          libegl1-mesa \
          libgl1-mesa-glx \
          libgl1-mesa-dri \
          libglx-mesa0 \
          libglapi-mesa \
          libosmesa6 \
          libosmesa6-dev \
          mesa-va-drivers \
          mesa-vdpau-drivers \
          mesa-vulkan-drivers \
          libegl1 \
          libgl1 \
          libgles2 \
          libglx0 \
          libglapi1 \
          libxcb-glx0 \
          libxcb-dri2-0 \
          libxcb-dri3-0 \
          libxcb-present0 \
          libxcb-sync1 \
          libxshmfence1 \
          libxxf86vm1 \
          libdrm2 \
          libdrm-common \
          libdrm-amdgpu1 \
          libdrm-intel1 \
          libdrm-nouveau2 \
          libdrm-radeon1
        echo "âœ… ALL EGL/OpenGL libraries installed"
        
        # Also install Qt6 system dependencies
        sudo apt-get install -y \
          libxkbcommon-x11-0 \
          libxcb-icccm4 \
          libxcb-image0 \
          libxcb-keysyms1 \
          libxcb-randr0 \
          libxcb-render-util0 \
          libxcb-xinerama0 \
          libxcb-xfixes0 \
          libxcb-shape0 \
          libglib2.0-0 \
          libfontconfig1 \
          libxcb1 \
          libxcb-xkb1 \
          libxkbcommon0 \
          libdbus-1-3 \
          libasound2 \
          xvfb
        echo "âœ… Qt6 system dependencies installed"
        
    - name: Verify EGL libraries are available
      run: |
        echo "Checking for libEGL.so.1..."
        find /usr/lib* -name "libEGL.so*" 2>/dev/null || echo "No libEGL found in /usr/lib"
        find /lib* -name "libEGL.so*" 2>/dev/null || echo "No libEGL found in /lib"
        
        echo "Checking library paths..."
        ldconfig -p | grep -i egl || echo "No EGL in ldconfig"
        
        echo "Installing symlinks if needed..."
        sudo ln -sf /usr/lib/x86_64-linux-gnu/libEGL.so.1 /usr/lib/libEGL.so.1 2>/dev/null || echo "Symlink already exists or failed"
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt6==6.8.0 PyQt6-sip==13.8.0
        echo "âœ… PyQt6 installed"
        
    - name: Test PyQt6 with virtual display
      run: |
        # Start virtual display
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 &
        sleep 2
        
        # Test PyQt6 with virtual display
        python -c "
import os
import sys
os.environ['DISPLAY'] = ':99'
from PyQt6.QtWidgets import QApplication
app = QApplication(sys.argv)
print('âœ… PyQt6 works with virtual display!')
app.quit()
"
        
    - name: Test main_window import with virtual display
      run: |
        export DISPLAY=:99
        export QT_QPA_PLATFORM=xcb
        python -c "
import os
import sys
os.environ['DISPLAY'] = ':99'
os.environ['QT_QPA_PLATFORM'] = 'xcb'
sys.path.append('.')
sys.path.append('src')
import src.main_window
print('âœ… main_window imports successfully!')
"
        
    - name: Test offscreen platform as backup
      run: |
        export QT_QPA_PLATFORM=offscreen
        python -c "
import os
import sys
os.environ['QT_QPA_PLATFORM'] = 'offscreen'
sys.path.append('.')
sys.path.append('src')
import src.main_window
print('âœ… main_window works with offscreen platform!')
"
        
    - name: Success
      run: |
        echo "ðŸŽ‰ COMPLETE SUCCESS! All EGL/PyQt6 issues resolved!"
        echo "âœ… Virtual display works"
        echo "âœ… main_window imports successfully"  
        echo "âœ… Ready for PyInstaller builds"